/**
 * Based on the google closure library.
 * http://closure-library.googlecode.com/svn/docs/class_goog_structs_Set.html
 *
 * A Set
 * 1) Cannot contain duplicate elements.
 * 2) A 'duplicate' is considered any object where o1.equals(o2) or any primitive value where v1 === v2
 */

//-------------------------------------------------------------------------------
// Dependencies
//-------------------------------------------------------------------------------

//@Export('Set')

//@Require('Class')
//@Require('Collection')

var bugpack = require('bugpack');


//-------------------------------------------------------------------------------
// BugPack
//-------------------------------------------------------------------------------

bugpack.declare('Set');

var Class = bugpack.require('Class');
var Collection = bugpack.require('Collection');


//-------------------------------------------------------------------------------
// Declare Class
//-------------------------------------------------------------------------------

var Set = Class.extend(Collection, {

    //-------------------------------------------------------------------------------
    // Constructor
    //-------------------------------------------------------------------------------

    _constructor: function() {

        this._super();


        //-------------------------------------------------------------------------------
        // Declare Variables
        //-------------------------------------------------------------------------------
    },


    //-------------------------------------------------------------------------------
    // Getters and Setters
    //-------------------------------------------------------------------------------


    //-------------------------------------------------------------------------------
    // Object Implementation
    //-------------------------------------------------------------------------------

    /**
     * @return {Set}
     */
    clone: function() {
        var cloneSet = new Set();
        cloneSet.addAll(this);
        return cloneSet;
    },


    //-------------------------------------------------------------------------------
    // Class Methods
    //-------------------------------------------------------------------------------

    /**
     * @param {*} value
     */
    add: function(value) {
        if (!this.hashStore.hasValue(value)) {
            this.hashStore.addValue(value);
            this.count++;
        }
    }
});


//-------------------------------------------------------------------------------
// Exports
//-------------------------------------------------------------------------------

bugpack.export(Set);
