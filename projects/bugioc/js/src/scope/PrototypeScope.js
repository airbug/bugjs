//-------------------------------------------------------------------------------
// Requires
//-------------------------------------------------------------------------------

//@Export('PrototypeScope')

//@Require('Class')
//@Require('List')
//@Require('Scope')

var bugpack = require('bugpack');


//-------------------------------------------------------------------------------
// BugPack
//-------------------------------------------------------------------------------

bugpack.declare('PrototypeScope');

var Class = bugpack.require('Class');
var List = bugpack.require('List');
var Scope = bugpack.require('Scope');


//-------------------------------------------------------------------------------
// Declare Class
//-------------------------------------------------------------------------------

var PrototypeScope = Class.extend(Scope, {

    //-------------------------------------------------------------------------------
    // Constructor
    //-------------------------------------------------------------------------------

    _constructor: function(bugIOC, iocModule) {

        this._super(bugIOC, iocModule);


        //-------------------------------------------------------------------------------
        // Declare Variables
        //-------------------------------------------------------------------------------

        /**
         * @private
         * @type {List<*>}
         */
        this.generatedModuleList = new List();
    },


    //-------------------------------------------------------------------------------
    // Class Methods
    //-------------------------------------------------------------------------------

    /**
     * @return {*}
     */
    generateModule: function() {
        var module = this.createModule();
        this.generatedModuleList.add(module);
        return module;
    }
});


//-------------------------------------------------------------------------------
// Exports
//-------------------------------------------------------------------------------

bugpack.export(PrototypeScope);
